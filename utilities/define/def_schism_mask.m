function msk = def_schism_mask(Mobj, nRegs, msk_name, def_flag, grd_ctr)
% Define a mask on the SCHISM grid
%
%% Syntax
% msk = def_schism_mask(Mobj)
% msk = def_schism_mask(Mobj, nRegs)
% msk = def_schism_mask(Mobj, msk_name)
% msk = def_schism_mask(Mobj, msk_name, def_flag)
% msk = def_schism_mask(Mobj, msk_name, def_flag, grd_ctr)
%
%% Description
% msk = def_schism_mask(Mobj) defines a mask on the SCHISM mesh grid.
% msk = def_schism_mask(Mobj, nRegs) specifies the # of defined regions
% msk = def_schism_mask(Mobj, msk_name) specifies the mask name for saving
% msk = def_schism_mask(Mobj, msk_name, def_flag) decides to load/rebuild a mask.
% msk = def_schism_mask(Mobj, msk_name, def_flag, grd_ctr) defines the grid center (node/elem/edge)
%
%% Example
% figure
% disp_schism_hgrid(Mobj, 1, 'EdgeAlpha', 0.05, 'LineWidth', 0.5);
% msk = def_schism_mask(Mobj);
% 
% figure
% disp_schism_hgrid(Mobj, 1, 'EdgeAlpha', 0.05, 'LineWidth', 0.5);
% msk = def_schism_mask(Mobj, 1, 'test', 'rebuild');
% 
% figure
% disp_schism_var(Mobj, Mobj.nLevs);
% axis image
% msk = def_schism_mask(Mobj, 2, 'test', 'rebuild', 'node');
%
%% Input Arguments
% Mobj - mesh object; datastruct
%       the datastruct containing mesh info.
% nRegs - the # of regions; double
%       the # of regions to be defined. default: nRegs = 1;
% msk_name - mask name; char
%       the mask name for saving; default: msk_name = 'default';
% def_flag - definition flags; char
%       the definition flags (rebuild/load). default: def_flag = 'rebuild';
% grd_ctr - grid center; char
%       the grid center (node/elem/edge), which determines the mask length.
%       default: grd_ctr = 'node'.
% 
%% Output Arguments
% msk - defined mask;  logic
%       the defined mask (nNodes/nElems/nEdges*1) with logical format.
% 
%% Tips
% A basemap should be created first before you use this function. It's
% usually a bathymetry map generated by 'disp_schism_hgrid'. However, you
% can also specifiy any other basemap such as velocity map, SST map, and so
% on. It depends on your needs! 
%
%% Author Info
% Created by Wenfan Wu, Virginia Institute of Marine Science in 2021.
% Last Updated on 15 Feb 2025.
% Email: wwu@vims.edu
% 
% See also: def_schism_fluxflag

%% Parse inputs
if nargin < 2
    nRegs = 1;
end
if nargin < 3; msk_name = 'default';end
if nargin < 4; def_flag = 'rebuild'; end
if nargin < 5; grd_ctr = 'node'; end
switch lower(grd_ctr(1:4))
    case 'node'
        nps = Mobj.nNodes; ux = Mobj.lon; uy = Mobj.lat;
    case 'elem'
        nps = Mobj.nElems; ux = Mobj.lonc; uy = Mobj.latc;
    case {'edge', 'side'}
        nps = Mobj.nEdges; ux = Mobj.lons; uy = Mobj.lats;
end
%% Check the basemap
if isempty(findall(0, 'Type', 'figure'))
    figure
    disp_schism_hgrid(Mobj, [0 0])
    axis image
    auto_center
end
%% Define the mask
msk_file = fullfile(Mobj.aimpath, ['mask_', msk_name, '.mat']);
switch def_flag
    case 'rebuild'
        msk = zeros(nps,1);
        hold on
        for iReg = 1:nRegs
            disp('draw a polygon on the map and press ENTER')
            geo_handle = drawpolygon;
            lonRoi = geo_handle.Position(:,1)';
            latRoi = geo_handle.Position(:,2)';
            % delete(geo_handle)
            
            msk = msk+inpolygon(ux, uy, lonRoi, latRoi);
            msk = msk~=0;
            scatter(ux(msk), uy(msk), 5, 'magenta', 'filled')
        end
        save(msk_file, 'msk')
        disp(['mask_', msk_name, '.mat has been saved into the aimpath'])
    case 'load'
        if exist(msk_file, 'file')
            load(msk_file) %#ok<LOAD> 
        else
            error('no defined mask available!')
        end
end
end